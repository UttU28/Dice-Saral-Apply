trigger:
- main

variables:
  azureSubscription: 'dicePipeline'
  containerRegistry: 'dockerSC'
  acrName: 'thisacr'
  imageName: 'dicewebview'
  imageTag: 'latest'
  imageRepository: '$(acrName).azurecr.io/$(imageName)'
  artifactName: '$(imageName)_ARTIFACT'
  dockerfilePath: '$(Build.SourcesDirectory)/repo/Dockerfile'
  gitRepoUrl: 'https://github.com/UttU28/Dice-WebView.git'
  gitBranch: 'main'
  webappName: 'dicesaralapply'
  rgName: 'this-dice-jobscraping-rg'
  githubRepository: 'UttU28/updateSites'
  githubEventType: 'update_index_html'
  containerAppUrl: '$(CONTAINER_APP_URL)'  # Assuming this variable is set elsewhere in your pipeline

jobs:
- job: Checkout
  displayName: 'Checkout Code'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - checkout: self

- job: ExtractTerraformOutput
  displayName: 'Extract Terraform Output'
  dependsOn: Checkout
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - name: Create a repository dispatch event to trigger workflow
      shell: pwsh
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_PAT }}
      run: |
        $pat = $env:GITHUB_PAT
        $uri = "https://api.github.com/repos/BrightRan/TestClock/dispatches"
        $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f "", $pat)))
        
        $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
        $headers.Add("Authorization", ("Basic {0}" -f $base64AuthInfo))
        $headers.Add("Accept", "application/vnd.github.everest-preview+json")
        $headers.Add("Content-Type", "application/json")

        $body = @{
          event_type = "test-repository-dispatch"
          client_payload = @{
            unit = $false
            integration = $true
          }
        } | ConvertTo-Json

        $response = Invoke-RestMethod -Uri $uri -Headers $headers -Body $body -Method POST
        $response | ConvertTo-Json

# Uncomment if Key Vault integration is required
# - job: GetSecrets
#   displayName: 'Get Secrets from Key Vault'
#   dependsOn: Checkout
#   pool:
#     vmImage: 'ubuntu-latest'
#   steps:
#   - task: AzureKeyVault@2
#     displayName: 'Get Secrets from Key Vault'
#     inputs:
#       azureSubscription: '$(azureSubscription)'
#       KeyVaultName: 'thisdicekeyvault'
#       SecretsFilter: '*'
#       RunAsPreJob: true

# Uncomment if Build and Deploy tasks are needed
# - job: BuildAndDeploy
#   displayName: 'Build and Deploy'
#   dependsOn: GetSecrets
#   pool:
#     vmImage: 'ubuntu-latest'
#   steps:
#   - template: buildAndDeploy.yaml
#     parameters:
#       containerRegistry: '$(containerRegistry)'
#       acrName: '$(acrName)'
#       imageName: '$(imageName)'
#       imageTag: '$(imageTag)'
#       dockerfilePath: '$(dockerfilePath)'
#       artifactName: '$(artifactName)'
#       imageRepository: '$(imageRepository)'
#       gitRepoUrl: '$(gitRepoUrl)'
#       gitBranch: '$(gitBranch)'

# Uncomment if Terraform deployment is required
# - job: Terraform
#   displayName: 'Deploy Terraform Infrastructure'
#   dependsOn: BuildAndDeploy
#   pool:
#     vmImage: 'ubuntu-latest'
#   steps:
#   - template: terraformTasks.yaml
#     parameters:
#       workingDirectory: 'webApp'

