trigger:
- main
# - none

variables:
  azureSubscription: 'dicePipeline'
  containerRegistry: 'dockerSC'
  imageTag: 'latest'
  dockerfilePath: '$(Build.SourcesDirectory)/repo/Dockerfile'
  gitRepoUrl: 'https://github.com/UttU28/Dice-WebView.git'
  gitBranch: 'main'
  webapp-name: 'dicesaralapply'

jobs:
- job: Checkout
  displayName: 'Checkout Code WEBAPP'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - checkout: self

- job: GetSecrets
  displayName: 'Get Secrets from Key Vault'
  dependsOn: Checkout
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: AzureKeyVault@2
    displayName: 'Get Secrets from Key Vault'
    inputs:
      azureSubscription: '$(azureSubscription)'
      KeyVaultName: 'thisdicekeyvault'
      SecretsFilter: '*'
      RunAsPreJob: true

- job: BuildAndDeploying
  displayName: 'Build and Deploy'
  dependsOn: GetSecrets
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - template: buildAndDeploy.yaml
    parameters:
      containerRegistry: '$(containerRegistry)'
      acrName: '$(acrName)'
      imageName: '$(webapp-name)'
      imageTag: '$(imageTag)'
      dockerfilePath: '$(dockerfilePath)'
      artifactName: '$(webapp-name)_ARTIFACT'
      imageRepository: '$(acrName).azurecr.io/$(webapp-name)'
      gitRepoUrl: '$(gitRepoUrl)'
      gitBranch: '$(gitBranch)'

- job: Terraform
  displayName: 'Deploy Terraform Infrastructure'
  dependsOn: BuildAndDeploying
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - template: terraformTasks.yaml
    parameters:
      workingDirectory: 'webApp'


- job: ExtractTerraformOutput
  displayName: 'Extract Terraform Output'
  dependsOn: Terraform
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: AzureCLI@2
    displayName: 'Extract Container App URL'
    inputs:
      azureSubscription: $(azureSubscription)
      scriptType: bash
      addSpnToEnvironment: true
      scriptLocation: inlineScript
      inlineScript: |
        CONTAINER_APP_URL=$(az containerapp show \
          --resource-group $(dicesaralapply-rg) \
          --name $(webapp-name) \
          --query "properties.configuration.ingress.fqdn" \
          --output tsv)
        echo "##vso[task.setvariable variable=CONTAINER_APP_URL]$CONTAINER_APP_URL"

