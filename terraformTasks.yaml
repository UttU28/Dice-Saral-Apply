parameters:
  - name: workingDirectory
    type: string

steps:
- task: AzureKeyVault@2
  displayName: 'Get Secrets from Key Vault'
  inputs:
    azureSubscription: '$(azureSubscription)'
    KeyVaultName: 'thisdicekeyvault'
    SecretsFilter: '*'
    RunAsPreJob: true

- task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@1
  displayName: Install Terraform

- task: AzureCLI@2
  displayName: "Terraform INIT"
  inputs:
    azureSubscription: dicePipeline
    scriptType: bash
    addSpnToEnvironment: true
    scriptLocation: inlineScript
    inlineScript: |
      export ARM_CLIENT_ID='$(arm-client-id)'
      export ARM_CLIENT_SECRET='$(arm-client-secret)'
      export ARM_TENANT_ID='$(arm-tenant-id)'
      export ARM_SUBSCRIPTION_ID='$(arm-subscription-id)'

      cd ${{ parameters.workingDirectory }}
      terraform init

- task: TerraformCLI@1
  displayName: 'Terraform Plan'
  inputs:
    command: 'plan'
    workingDirectory: ${{ parameters.workingDirectory }}
    azureSubscription: 'dicePipeline'
    environmentServiceName: 'dicePipeline'
    runAzLogin: true
    allowTelemetryCollection: true

# - task: TerraformCLI@1
#   displayName: 'Terraform Apply'
#   inputs:
#     command: 'apply'
#     workingDirectory: ${{ parameters.workingDirectory }}
#     azureSubscription: 'dicePipeline'
#     environmentServiceName: 'dicePipeline'
#     runAzLogin: true
#     allowTelemetryCollection: true
#     additionalArguments: '-auto-approve'
