trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: TerraformCLI@1
  displayName: terraform init
  inputs:
    inputs:
    command: init
    # environmentServiceName: 'My Azure Service Connection'
    # runAzLogin: true
    # backendServiceArm: '$(subscription)'
    # backendAzureRmResourceGroupName: '$(resourceGroup)'
    # backendAzureRmStorageAccountName: '$(storageAccount)'
    # backendAzureRmContainerName: '$(container)'
    # backendAzureRmKey: '$(tfstateFile)'

- task: TerraformCLI@1
  displayName: terraform plan -out=tfplan
  inputs:
    runAzLogin: true
    command: 'plan'
    # commandOptions: '-out=tfplan'
    # commandOptions: '-detailed-exitcode -out=tfplan'
    environmentServiceNameAzureRM: '$(subscription)'

# - task: TerraformCLI
#   displayName: terraform apply tfplan
#   condition: eq(variables.anyTfChanges,Â true)
#   inputs:
#     provider: 'azurerm'
#     command: 'apply'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/'
#     commandOptions: 'tfplan'
#     environmentServiceNameAzureRM: '$(subscription)'